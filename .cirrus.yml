pep517_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3.7

  install_script:
    - pip install --upgrade-strategy eager -U pep517

  script:
    - python3 -m pep517.check .


build_task:
  container:
    image: python:3
  setup_script:
    - pip install bork
  script:
    - bork build
  dist_artifacts:
    path: "dist/**"


docs_task:
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  container:
    image: python:3.7-slim

  depends_on:
    - build

  install_script:
    - apt update || true ; apt install -qq -y make
    - pip install --upgrade-strategy eager -U -r requirements-docs.txt
    - python .ci/install-wheels.py

  script:
    - make -C docs/ linkcheck
    - make -C docs/ html

task:
  name: "Linux $IMAGE"
  alias: Tests
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  allow_failures: $IMAGE =~ '.*-rc-.*'
  env:
    matrix:
      - IMAGE: python:3.6-slim
      - IMAGE: python:3.7-slim
      # - IMAGE: python:3.8-slim
      - IMAGE: pypy:3.6-slim

  container:
    image: $IMAGE

  depends_on:
    - build

  install_script:
    - >-
      if command -v pypy3 >/dev/null || python3 -c 'import sys; exit(sys.implementation.version.releaselevel == "final")'; then
        apt update || true;
        apt install -qq -y pkgconf libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev libsdl1.2-dev libsmpeg-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev libfreetype6-dev gcc
      fi
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - >-
      if command -v pypy3 >/dev/null; then
        pypy3 .ci/install-wheels.py
      else
        python .ci/install-wheels.py
      fi

  script:
    - command -v pypy3 >/dev/null && export PY=pypy3
    - ${PY-python3} --version
    - pip list
    - pytest

macOS_task:
  alias: Tests
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  osx_instance:
    image: catalina-base
  env:
    PATH: ${HOME}/.pyenv/shims:${PATH}
    matrix:
      - PYTHON: 3.6.8
      - PYTHON: 3.7.2
  depends_on:
    - build
  install_script:
    # Per the pyenv homebrew recommendations.
    # https://github.com/pyenv/pyenv/wiki#suggested-build-environment
    # - xcode-select --install  # Unnecessary on Cirrus
    - brew install openssl readline sqlite3 xz zlib pyenv
    - pyenv install ${PYTHON}
    - pyenv global ${PYTHON}
    - pyenv rehash
    - pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - python .ci/install-wheels.py

  script:
    - python3 --version
    - pip list
    - pytest

task:
  name: "Windows $IMAGE"
  alias: Tests
  skip: $CIRRUS_BRANCH =~ '.*\.tmp'
  allow_failures: $IMAGE =~ '.*-rc-.*'
  windows_container:
    os_version: 2019
    image: $IMAGE

  env:
    matrix:
      - IMAGE: python:3.6-windowsservercore
      - IMAGE: python:3.7-windowsservercore

  install_script:
    - C:\Python\python.exe -m pip install --upgrade-strategy eager -U -r requirements-tests.txt
    - C:\Python\python.exe .ci/install-wheels.py

  script:
    - C:\Python\python.exe --version
    - C:\Python\python.exe -m pip list
    - C:\Python\python.exe -m pytest



upload_task:
  only_if: $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_RELEASE != ''
  depends_on:
    - build
    - docs
    - pep517
    - Tests
  env:
    TWINE_TEST_TOKEN: "..."
    TWINE_PROD_TOKEN: "..."
    GITHUB_TOKEN: "..."

  container:
    image: xonsh/xonsh:slim

  install_script:
    - pip install twine

  script:
    - xonsh .ci/upload.xsh
